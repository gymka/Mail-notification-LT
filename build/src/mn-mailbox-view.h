/* Generated by GOB (v2.0.15)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>


#include <gtk/gtk.h>

#ifndef __MN_MAILBOX_VIEW_H__
#define __MN_MAILBOX_VIEW_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*
 * Type checking and casting macros
 */
#define MN_TYPE_MAILBOX_VIEW	(mn_mailbox_view_get_type())
#define MN_MAILBOX_VIEW(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), mn_mailbox_view_get_type(), MNMailboxView)
#define MN_MAILBOX_VIEW_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), mn_mailbox_view_get_type(), MNMailboxView const)
#define MN_MAILBOX_VIEW_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), mn_mailbox_view_get_type(), MNMailboxViewClass)
#define MN_IS_MAILBOX_VIEW(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), mn_mailbox_view_get_type ())

#define MN_MAILBOX_VIEW_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), mn_mailbox_view_get_type(), MNMailboxViewClass)

/* Private structure type */
typedef struct _MNMailboxViewPrivate MNMailboxViewPrivate;

/*
 * Main object structure
 */
#ifndef __TYPEDEF_MN_MAILBOX_VIEW__
#define __TYPEDEF_MN_MAILBOX_VIEW__
typedef struct _MNMailboxView MNMailboxView;
#endif
struct _MNMailboxView {
	GtkTreeView __parent__;
	/*< private >*/
	MNMailboxViewPrivate *_priv;
};

/*
 * Class definition
 */
typedef struct _MNMailboxViewClass MNMailboxViewClass;
struct _MNMailboxViewClass {
	GtkTreeViewClass __parent__;
	/*signal*/void (* activate_update) (MNMailboxView * self);
	/*signal*/void (* activate_properties) (MNMailboxView * self);
	/*signal*/void (* activate_add) (MNMailboxView * self);
	/*signal*/void (* activate_remove) (MNMailboxView * self);
	/*signal*/void (* activate_cut) (MNMailboxView * self);
	/*signal*/void (* activate_copy) (MNMailboxView * self);
	/*signal*/void (* activate_paste) (MNMailboxView * self);
};


/*
 * Public methods
 */
GType	mn_mailbox_view_get_type	(void) G_GNUC_CONST;
#line 84 "src/mn-mailbox-view.gob"
void 	mn_mailbox_view_activate_update	(MNMailboxView * self);
#line 67 "mn-mailbox-view.h"
#line 107 "src/mn-mailbox-view.gob"
void 	mn_mailbox_view_activate_properties	(MNMailboxView * self);
#line 70 "mn-mailbox-view.h"
#line 147 "src/mn-mailbox-view.gob"
void 	mn_mailbox_view_activate_add	(MNMailboxView * self);
#line 73 "mn-mailbox-view.h"
#line 162 "src/mn-mailbox-view.gob"
void 	mn_mailbox_view_activate_remove	(MNMailboxView * self);
#line 76 "mn-mailbox-view.h"
#line 168 "src/mn-mailbox-view.gob"
void 	mn_mailbox_view_activate_cut	(MNMailboxView * self);
#line 79 "mn-mailbox-view.h"
#line 175 "src/mn-mailbox-view.gob"
void 	mn_mailbox_view_activate_copy	(MNMailboxView * self);
#line 82 "mn-mailbox-view.h"
#line 181 "src/mn-mailbox-view.gob"
void 	mn_mailbox_view_activate_paste	(MNMailboxView * self);
#line 85 "mn-mailbox-view.h"
#line 929 "src/mn-mailbox-view.gob"
GtkWidget * 	mn_mailbox_view_new	(void);
#line 88 "mn-mailbox-view.h"

/*
 * Signal connection wrapper macros
 */
#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
#define mn_mailbox_view_connect__activate_update(object,func,data)	g_signal_connect(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_update",(GCallback) __extension__ ({void (* ___activate_update) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_update; }), (data))
#define mn_mailbox_view_connect_after__activate_update(object,func,data)	g_signal_connect_after(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_update",(GCallback) __extension__ ({void (* ___activate_update) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_update; }), (data))
#define mn_mailbox_view_connect_data__activate_update(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_update",(GCallback) __extension__ ({void (* ___activate_update) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_update; }), (data), (destroy_data), (GConnectFlags)(flags))
#define mn_mailbox_view_connect__activate_properties(object,func,data)	g_signal_connect(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_properties",(GCallback) __extension__ ({void (* ___activate_properties) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_properties; }), (data))
#define mn_mailbox_view_connect_after__activate_properties(object,func,data)	g_signal_connect_after(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_properties",(GCallback) __extension__ ({void (* ___activate_properties) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_properties; }), (data))
#define mn_mailbox_view_connect_data__activate_properties(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_properties",(GCallback) __extension__ ({void (* ___activate_properties) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_properties; }), (data), (destroy_data), (GConnectFlags)(flags))
#define mn_mailbox_view_connect__activate_add(object,func,data)	g_signal_connect(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_add",(GCallback) __extension__ ({void (* ___activate_add) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_add; }), (data))
#define mn_mailbox_view_connect_after__activate_add(object,func,data)	g_signal_connect_after(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_add",(GCallback) __extension__ ({void (* ___activate_add) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_add; }), (data))
#define mn_mailbox_view_connect_data__activate_add(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_add",(GCallback) __extension__ ({void (* ___activate_add) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_add; }), (data), (destroy_data), (GConnectFlags)(flags))
#define mn_mailbox_view_connect__activate_remove(object,func,data)	g_signal_connect(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_remove",(GCallback) __extension__ ({void (* ___activate_remove) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_remove; }), (data))
#define mn_mailbox_view_connect_after__activate_remove(object,func,data)	g_signal_connect_after(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_remove",(GCallback) __extension__ ({void (* ___activate_remove) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_remove; }), (data))
#define mn_mailbox_view_connect_data__activate_remove(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_remove",(GCallback) __extension__ ({void (* ___activate_remove) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_remove; }), (data), (destroy_data), (GConnectFlags)(flags))
#define mn_mailbox_view_connect__activate_cut(object,func,data)	g_signal_connect(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_cut",(GCallback) __extension__ ({void (* ___activate_cut) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_cut; }), (data))
#define mn_mailbox_view_connect_after__activate_cut(object,func,data)	g_signal_connect_after(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_cut",(GCallback) __extension__ ({void (* ___activate_cut) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_cut; }), (data))
#define mn_mailbox_view_connect_data__activate_cut(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_cut",(GCallback) __extension__ ({void (* ___activate_cut) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_cut; }), (data), (destroy_data), (GConnectFlags)(flags))
#define mn_mailbox_view_connect__activate_copy(object,func,data)	g_signal_connect(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_copy",(GCallback) __extension__ ({void (* ___activate_copy) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_copy; }), (data))
#define mn_mailbox_view_connect_after__activate_copy(object,func,data)	g_signal_connect_after(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_copy",(GCallback) __extension__ ({void (* ___activate_copy) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_copy; }), (data))
#define mn_mailbox_view_connect_data__activate_copy(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_copy",(GCallback) __extension__ ({void (* ___activate_copy) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_copy; }), (data), (destroy_data), (GConnectFlags)(flags))
#define mn_mailbox_view_connect__activate_paste(object,func,data)	g_signal_connect(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_paste",(GCallback) __extension__ ({void (* ___activate_paste) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_paste; }), (data))
#define mn_mailbox_view_connect_after__activate_paste(object,func,data)	g_signal_connect_after(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_paste",(GCallback) __extension__ ({void (* ___activate_paste) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_paste; }), (data))
#define mn_mailbox_view_connect_data__activate_paste(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_MAILBOX_VIEW(__extension__ ({MNMailboxView *___object = (object); ___object; })),"activate_paste",(GCallback) __extension__ ({void (* ___activate_paste) (MNMailboxView * ___fake___self, gpointer ___data ) = (func); ___activate_paste; }), (data), (destroy_data), (GConnectFlags)(flags))
#else /* __GNUC__ && !__STRICT_ANSI__ */
#define mn_mailbox_view_connect__activate_update(object,func,data)	g_signal_connect(MN_MAILBOX_VIEW(object),"activate_update",(GCallback)(func),(data))
#define mn_mailbox_view_connect_after__activate_update(object,func,data)	g_signal_connect_after(MN_MAILBOX_VIEW(object),"activate_update",(GCallback)(func),(data))
#define mn_mailbox_view_connect_data__activate_update(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_MAILBOX_VIEW(object),"activate_update",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#define mn_mailbox_view_connect__activate_properties(object,func,data)	g_signal_connect(MN_MAILBOX_VIEW(object),"activate_properties",(GCallback)(func),(data))
#define mn_mailbox_view_connect_after__activate_properties(object,func,data)	g_signal_connect_after(MN_MAILBOX_VIEW(object),"activate_properties",(GCallback)(func),(data))
#define mn_mailbox_view_connect_data__activate_properties(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_MAILBOX_VIEW(object),"activate_properties",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#define mn_mailbox_view_connect__activate_add(object,func,data)	g_signal_connect(MN_MAILBOX_VIEW(object),"activate_add",(GCallback)(func),(data))
#define mn_mailbox_view_connect_after__activate_add(object,func,data)	g_signal_connect_after(MN_MAILBOX_VIEW(object),"activate_add",(GCallback)(func),(data))
#define mn_mailbox_view_connect_data__activate_add(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_MAILBOX_VIEW(object),"activate_add",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#define mn_mailbox_view_connect__activate_remove(object,func,data)	g_signal_connect(MN_MAILBOX_VIEW(object),"activate_remove",(GCallback)(func),(data))
#define mn_mailbox_view_connect_after__activate_remove(object,func,data)	g_signal_connect_after(MN_MAILBOX_VIEW(object),"activate_remove",(GCallback)(func),(data))
#define mn_mailbox_view_connect_data__activate_remove(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_MAILBOX_VIEW(object),"activate_remove",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#define mn_mailbox_view_connect__activate_cut(object,func,data)	g_signal_connect(MN_MAILBOX_VIEW(object),"activate_cut",(GCallback)(func),(data))
#define mn_mailbox_view_connect_after__activate_cut(object,func,data)	g_signal_connect_after(MN_MAILBOX_VIEW(object),"activate_cut",(GCallback)(func),(data))
#define mn_mailbox_view_connect_data__activate_cut(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_MAILBOX_VIEW(object),"activate_cut",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#define mn_mailbox_view_connect__activate_copy(object,func,data)	g_signal_connect(MN_MAILBOX_VIEW(object),"activate_copy",(GCallback)(func),(data))
#define mn_mailbox_view_connect_after__activate_copy(object,func,data)	g_signal_connect_after(MN_MAILBOX_VIEW(object),"activate_copy",(GCallback)(func),(data))
#define mn_mailbox_view_connect_data__activate_copy(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_MAILBOX_VIEW(object),"activate_copy",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#define mn_mailbox_view_connect__activate_paste(object,func,data)	g_signal_connect(MN_MAILBOX_VIEW(object),"activate_paste",(GCallback)(func),(data))
#define mn_mailbox_view_connect_after__activate_paste(object,func,data)	g_signal_connect_after(MN_MAILBOX_VIEW(object),"activate_paste",(GCallback)(func),(data))
#define mn_mailbox_view_connect_data__activate_paste(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_MAILBOX_VIEW(object),"activate_paste",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#endif /* __GNUC__ && !__STRICT_ANSI__ */


#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
