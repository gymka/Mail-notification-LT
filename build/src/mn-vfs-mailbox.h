/* Generated by GOB (v2.0.15)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>


#include <libgnomevfs/gnome-vfs.h>
#include "mn-reentrant-mailbox.h"

#ifndef __MN_VFS_MAILBOX_H__
#define __MN_VFS_MAILBOX_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */



#define MN_VFS_MAILBOX_MAX_BACKEND_TYPES	5
extern GType mn_vfs_mailbox_backend_types[MN_VFS_MAILBOX_MAX_BACKEND_TYPES + 1];


/*
 * Type checking and casting macros
 */
#define MN_TYPE_VFS_MAILBOX	(mn_vfs_mailbox_get_type())
#define MN_VFS_MAILBOX(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), mn_vfs_mailbox_get_type(), MNVFSMailbox)
#define MN_VFS_MAILBOX_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), mn_vfs_mailbox_get_type(), MNVFSMailbox const)
#define MN_VFS_MAILBOX_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), mn_vfs_mailbox_get_type(), MNVFSMailboxClass)
#define MN_IS_VFS_MAILBOX(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), mn_vfs_mailbox_get_type ())

#define MN_VFS_MAILBOX_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), mn_vfs_mailbox_get_type(), MNVFSMailboxClass)

/* Private structure type */
typedef struct _MNVFSMailboxPrivate MNVFSMailboxPrivate;

/*
 * Main object structure
 */
#ifndef __TYPEDEF_MN_VFS_MAILBOX__
#define __TYPEDEF_MN_VFS_MAILBOX__
typedef struct _MNVFSMailbox MNVFSMailbox;
#endif
struct _MNVFSMailbox {
	MNReentrantMailbox __parent__;
	/*< public >*/
	char * uri;
	GnomeVFSURI * vfs_uri;
	/*< private >*/
	MNVFSMailboxPrivate *_priv;
};

/*
 * Class definition
 */
typedef struct _MNVFSMailboxClass MNVFSMailboxClass;
struct _MNVFSMailboxClass {
	MNReentrantMailboxClass __parent__;
};


/*
 * Public methods
 */
GType	mn_vfs_mailbox_get_type	(void) G_GNUC_CONST;
#line 86 "src/mn-vfs-mailbox.gob"
void 	mn_vfs_mailbox_init_types	(void);
#line 69 "mn-vfs-mailbox.h"
#line 476 "src/mn-vfs-mailbox.gob"
void 	mn_vfs_mailbox_lock	(MNVFSMailbox * self);
#line 72 "mn-vfs-mailbox.h"
#line 482 "src/mn-vfs-mailbox.gob"
void 	mn_vfs_mailbox_unlock	(MNVFSMailbox * self);
#line 75 "mn-vfs-mailbox.h"

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
