/* Generated by GOB (v2.0.15)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>


#include <gmime/gmime.h>
#include "mn-vfs-mailbox-backend.h"
#include "mn-message.h"

#ifndef __MN_BASE_MBOX_MAILBOX_BACKEND_H__
#define __MN_BASE_MBOX_MAILBOX_BACKEND_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*
 * Type checking and casting macros
 */
#define MN_TYPE_BASE_MBOX_MAILBOX_BACKEND	(mn_base_mbox_mailbox_backend_get_type())
#define MN_BASE_MBOX_MAILBOX_BACKEND(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), mn_base_mbox_mailbox_backend_get_type(), MNBaseMboxMailboxBackend)
#define MN_BASE_MBOX_MAILBOX_BACKEND_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), mn_base_mbox_mailbox_backend_get_type(), MNBaseMboxMailboxBackend const)
#define MN_BASE_MBOX_MAILBOX_BACKEND_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), mn_base_mbox_mailbox_backend_get_type(), MNBaseMboxMailboxBackendClass)
#define MN_IS_BASE_MBOX_MAILBOX_BACKEND(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), mn_base_mbox_mailbox_backend_get_type ())

#define MN_BASE_MBOX_MAILBOX_BACKEND_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), mn_base_mbox_mailbox_backend_get_type(), MNBaseMboxMailboxBackendClass)

/* Private structure type */
typedef struct _MNBaseMboxMailboxBackendPrivate MNBaseMboxMailboxBackendPrivate;

/*
 * Main object structure
 */
#ifndef __TYPEDEF_MN_BASE_MBOX_MAILBOX_BACKEND__
#define __TYPEDEF_MN_BASE_MBOX_MAILBOX_BACKEND__
typedef struct _MNBaseMboxMailboxBackend MNBaseMboxMailboxBackend;
#endif
struct _MNBaseMboxMailboxBackend {
	MNVFSMailboxBackend __parent__;
	/*< private >*/
	MNBaseMboxMailboxBackendPrivate *_priv;
};

/*
 * Class definition
 */
typedef struct _MNBaseMboxMailboxBackendClass MNBaseMboxMailboxBackendClass;
struct _MNBaseMboxMailboxBackendClass {
	MNVFSMailboxBackendClass __parent__;
	MNMessage * (* get_new_message) (MNBaseMboxMailboxBackend * self, GMimeMessage * mime_message);
};


/*
 * Public methods
 */
GType	mn_base_mbox_mailbox_backend_get_type	(void) G_GNUC_CONST;

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
