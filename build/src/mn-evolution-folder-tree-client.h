/* Generated by GOB (v2.0.15)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>


#include <gtk/gtk.h>

#ifndef __MN_EVOLUTION_FOLDER_TREE_CLIENT_H__
#define __MN_EVOLUTION_FOLDER_TREE_CLIENT_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*
 * Type checking and casting macros
 */
#define MN_TYPE_EVOLUTION_FOLDER_TREE_CLIENT	(mn_evolution_folder_tree_client_get_type())
#define MN_EVOLUTION_FOLDER_TREE_CLIENT(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), mn_evolution_folder_tree_client_get_type(), MNEvolutionFolderTreeClient)
#define MN_EVOLUTION_FOLDER_TREE_CLIENT_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), mn_evolution_folder_tree_client_get_type(), MNEvolutionFolderTreeClient const)
#define MN_EVOLUTION_FOLDER_TREE_CLIENT_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), mn_evolution_folder_tree_client_get_type(), MNEvolutionFolderTreeClientClass)
#define MN_IS_EVOLUTION_FOLDER_TREE_CLIENT(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), mn_evolution_folder_tree_client_get_type ())

#define MN_EVOLUTION_FOLDER_TREE_CLIENT_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), mn_evolution_folder_tree_client_get_type(), MNEvolutionFolderTreeClientClass)

/* Private structure type */
typedef struct _MNEvolutionFolderTreeClientPrivate MNEvolutionFolderTreeClientPrivate;

/*
 * Main object structure
 */
#ifndef __TYPEDEF_MN_EVOLUTION_FOLDER_TREE_CLIENT__
#define __TYPEDEF_MN_EVOLUTION_FOLDER_TREE_CLIENT__
typedef struct _MNEvolutionFolderTreeClient MNEvolutionFolderTreeClient;
#endif
struct _MNEvolutionFolderTreeClient {
	GtkHBox __parent__;
	/*< public >*/
	char * selected_uri;
	/*< private >*/
	MNEvolutionFolderTreeClientPrivate *_priv;
};

/*
 * Class definition
 */
typedef struct _MNEvolutionFolderTreeClientClass MNEvolutionFolderTreeClientClass;
struct _MNEvolutionFolderTreeClientClass {
	GtkHBoxClass __parent__;
	/*signal*/void (* folder_activated) (MNEvolutionFolderTreeClient * self);
};


/*
 * Public methods
 */
GType	mn_evolution_folder_tree_client_get_type	(void) G_GNUC_CONST;
#line 44 "src/mn-evolution-folder-tree-client.gob"
gboolean 	mn_evolution_folder_tree_client_get_connected	(MNEvolutionFolderTreeClient * self);
#line 63 "mn-evolution-folder-tree-client.h"
#line 59 "src/mn-evolution-folder-tree-client.gob"
gchar * 	mn_evolution_folder_tree_client_get_selected_uri	(MNEvolutionFolderTreeClient * self);
#line 66 "mn-evolution-folder-tree-client.h"
#line 51 "src/mn-evolution-folder-tree-client.gob"
void 	mn_evolution_folder_tree_client_set_selected_uri	(MNEvolutionFolderTreeClient * self,
					gchar * val);
#line 70 "mn-evolution-folder-tree-client.h"
#line 356 "src/mn-evolution-folder-tree-client.gob"
GtkWidget * 	mn_evolution_folder_tree_client_new	(void);
#line 73 "mn-evolution-folder-tree-client.h"

/*
 * Signal connection wrapper macros
 */
#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
#define mn_evolution_folder_tree_client_connect__folder_activated(object,func,data)	g_signal_connect(MN_EVOLUTION_FOLDER_TREE_CLIENT(__extension__ ({MNEvolutionFolderTreeClient *___object = (object); ___object; })),"folder_activated",(GCallback) __extension__ ({void (* ___folder_activated) (MNEvolutionFolderTreeClient * ___fake___self, gpointer ___data ) = (func); ___folder_activated; }), (data))
#define mn_evolution_folder_tree_client_connect_after__folder_activated(object,func,data)	g_signal_connect_after(MN_EVOLUTION_FOLDER_TREE_CLIENT(__extension__ ({MNEvolutionFolderTreeClient *___object = (object); ___object; })),"folder_activated",(GCallback) __extension__ ({void (* ___folder_activated) (MNEvolutionFolderTreeClient * ___fake___self, gpointer ___data ) = (func); ___folder_activated; }), (data))
#define mn_evolution_folder_tree_client_connect_data__folder_activated(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_EVOLUTION_FOLDER_TREE_CLIENT(__extension__ ({MNEvolutionFolderTreeClient *___object = (object); ___object; })),"folder_activated",(GCallback) __extension__ ({void (* ___folder_activated) (MNEvolutionFolderTreeClient * ___fake___self, gpointer ___data ) = (func); ___folder_activated; }), (data), (destroy_data), (GConnectFlags)(flags))
#else /* __GNUC__ && !__STRICT_ANSI__ */
#define mn_evolution_folder_tree_client_connect__folder_activated(object,func,data)	g_signal_connect(MN_EVOLUTION_FOLDER_TREE_CLIENT(object),"folder_activated",(GCallback)(func),(data))
#define mn_evolution_folder_tree_client_connect_after__folder_activated(object,func,data)	g_signal_connect_after(MN_EVOLUTION_FOLDER_TREE_CLIENT(object),"folder_activated",(GCallback)(func),(data))
#define mn_evolution_folder_tree_client_connect_data__folder_activated(object,func,data,destroy_data,flags)	g_signal_connect_data(MN_EVOLUTION_FOLDER_TREE_CLIENT(object),"folder_activated",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#endif /* __GNUC__ && !__STRICT_ANSI__ */


/*
 * Argument wrapping macros
 */
#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
#define MN_EVOLUTION_FOLDER_TREE_CLIENT_GET_PROP_CONNECTED(arg)	"connected", __extension__ ({gboolean *z = (arg); z;})
#define MN_EVOLUTION_FOLDER_TREE_CLIENT_PROP_SELECTED_URI(arg)    	"selected_uri", __extension__ ({gchar *z = (arg); z;})
#define MN_EVOLUTION_FOLDER_TREE_CLIENT_GET_PROP_SELECTED_URI(arg)	"selected_uri", __extension__ ({gchar **z = (arg); z;})
#else /* __GNUC__ && !__STRICT_ANSI__ */
#define MN_EVOLUTION_FOLDER_TREE_CLIENT_GET_PROP_CONNECTED(arg)	"connected",(gboolean *)(arg)
#define MN_EVOLUTION_FOLDER_TREE_CLIENT_PROP_SELECTED_URI(arg)    	"selected_uri",(gchar *)(arg)
#define MN_EVOLUTION_FOLDER_TREE_CLIENT_GET_PROP_SELECTED_URI(arg)	"selected_uri",(gchar **)(arg)
#endif /* __GNUC__ && !__STRICT_ANSI__ */


#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
